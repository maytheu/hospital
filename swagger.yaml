openapi: 3.0.3
info:
  title: Hospital management system
  description: |-
    This is a api for the hospital management system for managing patients and doctors information
  contact:
    email: me@adetunjim.com
  version: 1.0.0
servers:
  - url: http://localhost/local/api/v1
  - url: http://api.adetunjim.com/hospital/api/v1
tags:
  - name: auth
    description: authentication and authorization
  - name: lab
    description: view lab result

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to your account
      description: Login with email and password
      operationId: userLogin
      requestBody:
        description: email and password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: me@adetunjim.com
                password:
                  type: string
                  example: "123456"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: login successfull
                  data:
                    type: object
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/me:
    get:
      tags:
        - auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserData"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/new:
    post:
      tags:
        - auth
      summary: create new patient, doctors and nurse, doctors and nurse can only create new patients, only assign doctors can create doctors/nurse
      description: create new user based on authorization level
      operationId: newUser
      security:
        - bearerAuth: []
      requestBody:
        description: Create new user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserData"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please check your email to confirm ur login
                  data:
                    type: object
                    properties:
                      data:
                        type: string
                        example: Account created
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "409":
          description: Duplicate User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Duplicate"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/update-password:
    put:
      tags:
        - auth
      security:
        - bearerAuth: []
      requestBody:
        description: change password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/update-profile:
    put:
      tags:
        - auth
      security:
        - bearerAuth: []
      requestBody:
        description: update profile - address, phone, dateOfBirth and fullname can be updated
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab:
    get:
      tags:
        - lab
      security:
        - bearerAuth: []
      description: Load all patient lab result
      operationId: labs
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Laboratory"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab/{labId}:
    get:
      tags:
        - lab
      security:
        - bearerAuth: []
      description: Load patient lab result
      operationId: lab
      parameters:
        - name: labId
          in: path
          description: Laboratory id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Laboratory"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab/new:
    post:
      tags:
        - lab
      summary: create new Laboratory test
      description: only name is required
      operationId: newLab
      security:
        - bearerAuth: []
      requestBody:
        description: new test
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaboratoryData"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please check your email to confirm ur login
                  data:
                    type: object
                    properties:
                      data:
                        type: string
                        example: Account created
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab/update/{labId}:
    put:
      tags:
        - lab
      summary: update Laboratory test
      description: only result required
      operationId: updateLab
      security:
        - bearerAuth: []
      parameters:
        - name: labId
          in: path
          description: Laboratory id
          required: true
          schema:
            type: string
      requestBody:
        description: new test
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaboratoryData"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please check your email to confirm ur login
                  data:
                    type: object
                    properties:
                      data:
                        type: string
                        example: Account created
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Duplicate:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 409
        message:
          type: string

    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 500
        message:
          type: string

    Laboratory:
      type: object
      properties:
        name:
          type: string
          example: DNA test
        description:
          type: string
        result:
          type: string
        conductedBy:
          type: string

    LaboratoryData:
      type: object
      properties:
        name:
          type: string
          example: DNA test
        description:
          type: string
        result:
          type: string

    NotFound:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 404
        message:
          type: string
          example: resource not found

    Unauthenticated:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 401
        message:
          type: string

    Unauthorized:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 401
        message:
          type: string

    UserData:
      type: object
      properties:
        fullname:
          type: string
          example: patient one
        email:
          type: string
          example: test@adetunjim.com
        dateOfBirth:
          type: string
          example: "2001-06-06"
        phone:
          type: string
          example: "+23410121389781"
        role:
          type: string
          example: Admin | Doctor | Nurse | Patient

    Validation:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 422
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
