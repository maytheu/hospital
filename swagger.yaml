openapi: 3.0.3
info:
  title: Hospital management system
  description: |-
    This is a api for the hospital management system for managing patients and doctors information
  contact:
    email: me@adetunjim.com
  version: 1.0.0
servers:
  - url: http://localhost/local/api/v1
  - url: http://api.adetunjim.com/hospital/api/v1
tags:
  - name: auth
    description: authentication and authorization

paths:
  /auth/new:
    post:
      tags:
        - auth
      summary: create new patient, doctors and nurse, doctors and nurse can only create new patients, only assign doctors can create doctors/nurse
      description: create new user based on authorization level
      operationId: newUser
      security:
        - bearerAuth: []
      requestBody:
        description: Create new user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserData"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please check your email to confirm ur login
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "409":
          description: Duplicate User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Duplicate"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Duplicate:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 409
        message:
          type: string

    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 500
        message:
          type: string

    Unauthenticated:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 403
        message:
          type: string

    Unauthorized:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 401
        message:
          type: string

    UserData:
      type: object
      properties:
        fullname:
          type: string
          example: patient one
        email:
          type: string
          example: test@adetunjim.com
        dateofBirth:
          type: string
          example: 20001-06-06
        phone:
          type: string
          example: +23410121389781
        role:
          type: string
          example: Admin|Doctor|Nurse|Patient

    Validation:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 422
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
