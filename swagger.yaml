openapi: 3.0.3
info:
  title: Hospital management system
  description: |-
    This is a api for the hospital management system for managing patients and doctors information
  contact:
    email: me@adetunjim.com
  version: 1.0.0
servers:
  - url: http://localhost/local/api/v1
  - url: http://api.adetunjim.com/hospital/api/v1
tags:
  - name: auth
    description: authentication and authorization
  - name: lab
    description: view lab result
  - name: medication
    description: Patients medication history
  - name: surgery
    description: Patient surgery procedure

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to your account
      description: Login with email and password
      operationId: userLogin
      requestBody:
        description: email and password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: me@adetunjim.com
                password:
                  type: string
                  example: "123456"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: login successfull
                  data:
                    type: object
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/me:
    get:
      tags:
        - auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserData"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/new:
    post:
      tags:
        - auth
      summary: create new patient, doctors and nurse, doctors and nurse can only create new patients, only assign doctors can create doctors/nurse
      description: create new user based to create doctors/nurse
      operationId: newUser
      security:
        - bearerAuth: []
      requestBody:
        description: Create new user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserData"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please check your email to confirm ur login
                  data:
                    type: object
                    properties:
                      data:
                        type: string
                        example: Account created
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "409":
          description: Duplicate User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Duplicate"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/request:
    post:
      tags:
        - auth
      summary: A patient can create a new account, password is sent to thier mail
      description: create new user based
      operationId: newUserRequest
      security:
        - bearerAuth: []
      requestBody:
        description: Create new user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDataRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please check your email to confirm ur login
                  data:
                    type: object
                    properties:
                      data:
                        type: string
                        example: Account created
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "409":
          description: Duplicate User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Duplicate"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/update-password:
    put:
      tags:
        - auth
      security:
        - bearerAuth: []
      requestBody:
        description: change password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/update-profile:
    put:
      tags:
        - auth
      security:
        - bearerAuth: []
      requestBody:
        description: update profile - address, phone, dateOfBirth and fullname can be updated
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab:
    get:
      tags:
        - lab
      security:
        - bearerAuth: []
      description: Load all patient lab result
      operationId: labs
      parameters:
        - name: name
          in: query
          description: Lab name
          schema:
            type: string
        - name: description
          in: query
          description: search by lab description
          schema:
            type: string
        - name: result
          in: query
          description: Search by result
          schema:
            type: string
        - name: sort
          in: query
          description: sort response, seperate multiple sort list with comma
          schema:
            type: string
        - name: page
          in: query
          description: search page
          schema:
            type: number
        - name: limit
          in: query
          description: number of response per page
          schema:
            type: number
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: "#/components/schemas/Laboratory"
                      count:
                        type: number
                      page:
                        type: number
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab/{labId}:
    get:
      tags:
        - lab
      security:
        - bearerAuth: []
      description: Load patient lab result
      operationId: lab
      parameters:
        - name: labId
          in: path
          description: Laboratory id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Laboratory"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab/new:
    post:
      tags:
        - lab
      summary: create new Laboratory test
      description: name and email is required
      operationId: newLab
      security:
        - bearerAuth: []
      requestBody:
        description: new test
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaboratoryNewData"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lab data created
                  data:
                    type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/LaboratoryNewData"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lab/update/{labId}:
    put:
      tags:
        - lab
      summary: update Laboratory test result or  data
      description: only result is required
      operationId: updateLab
      security:
        - bearerAuth: []
      parameters:
        - name: labId
          in: path
          description: Laboratory id
          required: true
          schema:
            type: string
      requestBody:
        description: nupdateew test
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaboratoryUpdateData"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lab result updated
                  data:
                    $ref: "#/components/schemas/LaboratoryUpdateData"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /medical:
    get:
      tags:
        - medication
      security:
        - bearerAuth: []
      description: Patients medication history
      summary: Retrive patients medications
      operationId: medications
      parameters:
        - name: treatment
          in: query
          description: Medication name
          schema:
            type: string
        - name: duration
          in: query
          description: search by medication duration
          schema:
            type: string
        - name: frequency
          in: query
          description: Search by frequency
          schema:
            type: string
        - name: drugs
          in: query
          description: search by drugs and dosage
          schema:
            type: string
        - name: sort
          in: query
          description: sort response, seperate multiple sort list with comma
          schema:
            type: string
        - name: page
          in: query
          description: search page
          schema:
            type: number
        - name: limit
          in: query
          description: number of response per page
          schema:
            type: number
        - name: admin
          in: query
          description: check medical report that a nurse or doctor conduct
          schema:
            type: boolean
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      report:
                        type: array
                        items:
                          $ref: "#/components/schemas/Medication"
                      patient:
                        $ref: "#/components/schemas/UserDataRequest"
                      count:
                        type: number
                      page:
                        type: number
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /medical/{medId}:
    get:
      description: get medication details
      summary: Medication details
      tags:
        - medication
      security:
        - bearerAuth: []
      operationId: medication
      parameters:
        - name: medId
          in: path
          description: Medication id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Medication"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /medical/new:
    post:
      tags:
        - medication
      security:
        - bearerAuth: []
      description: New medication
      summary: Create new medication for patients
      operationId: newMedication
      requestBody:
        description: All field are required
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicationNew"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lab data created
                  data:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          treatment:
                            type: string
                          medId:
                            type: string
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /medical/update/{medId}:
    put:
      tags:
        - medication
      summary: update patient Medication
      operationId: updateMedication
      security:
        - bearerAuth: []
      parameters:
        - name: medId
          in: path
          description: Medication id
          required: true
          schema:
            type: string
      requestBody:
        description: update medication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicationUpdate"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lab result updated
                  data:
                    $ref: "#/components/schemas/MedicationUpdate"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /procedure:
    get:
      tags:
        - surgery
      security:
        - bearerAuth: []
      description: Patients surgery procedure history
      summary: Retrive patients procedure
      operationId: procedures
      parameters:
        - name: name
          in: query
          description: Procedure name
          schema:
            type: string
        - name: description
          in: query
          description: search by procedure description
          schema:
            type: string
        - name: procedure
          in: query
          description: Search by procedure
          schema:
            type: string
        - name: result
          in: query
          description: search by procedure result
          schema:
            type: string
        - name: sort
          in: query
          description: sort response, seperate multiple sort list with comma
          schema:
            type: string
        - name: page
          in: query
          description: search page
          schema:
            type: number
        - name: limit
          in: query
          description: number of response per page
          schema:
            type: number
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      surgery:
                        type: array
                        items:
                          $ref: "#/components/schemas/Surgery"
                      patient:
                        $ref: "#/components/schemas/UserDataRequest"
                      count:
                        type: number
                      page:
                        type: number
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /procedure/{surgeryId}:
    get:
      description: get surgery details
      summary: Surgery details
      tags:
        - surgery
      security:
        - bearerAuth: []
      operationId: surgery
      parameters:
        - name: surgeryId
          in: path
          description: Surgery id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Surgery"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /procedure/new:
    post:
      tags:
        - surgery
      security:
        - bearerAuth: []
      description: New Surgery Procedure
      summary: Create new Procedure for patients
      operationId: newSurgery
      requestBody:
        description: name, pocedure field are required
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SurgeryNew"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Surgery data created
                  data:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          name:
                            type: string
                          procedure:
                            type: string
                          SurgeryId:
                            type: string
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /procedure/update/{surgeryId}:
    put:
      tags:
        - surgery
      summary: update patient Surgery record
      operationId: updateSurgery
      security:
        - bearerAuth: []
      parameters:
        - name: surgeryId
          in: path
          description: Surgery id
          required: true
          schema:
            type: string
      requestBody:
        description: update surgery record
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Surgery"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Lab result updated
                  data:
                    $ref: "#/components/schemas/Surgery"
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthenticated"
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"
        "404":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validation"
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Duplicate:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 409
        message:
          type: string

    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 500
        message:
          type: string

    Laboratory:
      type: object
      properties:
        name:
          type: string
          example: DNA test
        description:
          type: string
        result:
          type: string
        conductedBy:
          type: object
          properties:
            fullname:
              type: string

    LaboratoryNewData:
      type: object
      properties:
        name:
          type: string
          example: DNA test
        email:
          type: string
        description:
          type: string
        result:
          type: string

    LaboratoryUpdateData:
      type: object
      properties:
        name:
          type: string
          example: DNA test
        description:
          type: string
        result:
          type: string

    Medication:
      type: object
      properties:
        treatment:
          type: string
        drugsAndDosage:
          type: string
        duration:
          type: string
        frequency:
          type: string
        conductedBy:
          type: object
          properties:
            fullname:
              type: string

    MedicationNew:
      type: object
      properties:
        treatment:
          type: string
        drugsAndDosage:
          type: string
        duration:
          type: string
        frequency:
          type: string
        email:
          type: string

    MedicationUpdate:
      type: object
      properties:
        treatment:
          type: string
        drugsAndDosage:
          type: string
        duration:
          type: string
        frequency:
          type: string

    NotFound:
      type: object
      properties:
        status:
          type: string
          example: error
        statusCode:
          type: number
          example: 404
        message:
          type: string
          example: resource not found

    Surgery:
      type: object
      properties:
        name:
          type: string
        procedure:
          type: string
        description:
          type: string
        result:
          type: string

    SurgeryNew:
      type: object
      properties:
        name:
          type: string
        procedure:
          type: string
        email:
          type: string
        description:
          type: string
        result:
          type: string

    Unauthenticated:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 401
        message:
          type: string

    Unauthorized:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 401
        message:
          type: string

    UserData:
      type: object
      properties:
        fullname:
          type: string
          example: patient one
        email:
          type: string
          example: test@adetunjim.com
        dateOfBirth:
          type: string
          example: "2001-06-06"
        phone:
          type: string
          example: "+23410121389781"
        role:
          type: string
          example: Admin | Doctor | Nurse | Patient

    UserDataRequest:
      type: object
      properties:
        fullname:
          type: string
          example: patient one
        email:
          type: string
          example: test@adetunjim.com
        dateOfBirth:
          type: string
          example: "2001-06-06"
        phone:
          type: string
          example: "+23410121389781"

    Validation:
      type: object
      properties:
        status:
          type: string
          example: fail
        statusCode:
          type: number
          example: 422
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
